/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Dao.DBConnect;
import Dao.PhimDAO;
import Dao.PhongChieuDAO;
import Dao.SuatChieuDAO;
import Model.Phim;
import Model.PhongChieu;
import Model.SuatChieu;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phuocvu
 */
public class ViewSuatChieu_NV extends javax.swing.JFrame {
    private Connection cons = null;
    private List<Phim> phimList;
    private List<PhongChieu> phongChieuList;
    private int maSuatChieu;
    
    public ViewSuatChieu_NV() {
        initComponents();
        cons = DBConnect.getConnectionMySql("root", "");
        if(cons == null){
            JOptionPane.showMessageDialog(rootPane, "khong the ket noi co so du lieu");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGiaVe = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dtThoiGianBatDau = new com.github.lgooddatepicker.components.DateTimePicker();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dateTimePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        cbbPhongChieu = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbbPhim = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/home.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        jLabel2.setText("Suất chiếu");
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel4.setText("Phòng chiếu");

        jLabel5.setText("Giá vé");

        jLabel6.setText("Thời gian chiếu");

        btnThem.setText("Thêm");
        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnThem.setBorderPainted(false);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXoa.setBorderPainted(false);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSua.setBorderPainted(false);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.setBackground(new java.awt.Color(255, 255, 255));
        btnReset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReset.setBorderPainted(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setText("Quản lý suất chiếu");
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/search.png"))); // NOI18N
        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã suất chiếu", "Phòng chiếu", "Phim", "Giá vé (VND)", "Thời gian chiếu"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        cbbPhongChieu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbPhongChieuItemStateChanged(evt);
            }
        });

        jLabel10.setText("Phim");

        cbbPhim.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbPhimItemStateChanged(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Rạp Chiếu Phim");
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/placeholder.png"))); // NOI18N

        jLabel11.setText("Linh Trung, Thủ Đức, TP.HCM");
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(286, 286, 286)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtGiaVe, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dtThoiGianBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cbbPhongChieu, 0, 193, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cbbPhim, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(cbbPhongChieu, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(cbbPhim, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiaVe, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtThoiGianBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        List<Phim> phimList = PhimDAO.getAll(cons);
        this.phimList = phimList;
        loadAllPhim(phimList);
        
        List<PhongChieu> phongChieuList = PhongChieuDAO.getAll(cons);
        this.phongChieuList = phongChieuList;
        loadAllPhongChieu(phongChieuList);
        
        int maPhim = phimList.size() > 0 ? phimList.get(0).getMa_phim() : 0;
        int maPhongChieu = phongChieuList.size() > 0 ? phongChieuList.get(0).getMa_phong_chieu() : 0;
        List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
        loadAllSuatChieu(suatChieuList);
    }//GEN-LAST:event_formWindowOpened

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        String thoiGian = dateTimePicker1.datePicker.getDateStringOrEmptyString() + 
                " " + dateTimePicker1.timePicker.getTimeStringOrEmptyString() + ":00";
        List<SuatChieu> suatChieuList = SuatChieuDAO.getByThoiGian(cons, thoiGian);
        loadAllSuatChieu(suatChieuList);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        String tenPhim = (String) cbbPhim.getSelectedItem();
        String tenPhongChieu = (String) cbbPhongChieu.getSelectedItem();
        long giaVe = Long.parseLong(txtGiaVe.getText());
        String thoiGian = dtThoiGianBatDau.datePicker.getDateStringOrEmptyString() + 
                " " + dtThoiGianBatDau.timePicker.getTimeStringOrEmptyString() + ":00";
        int maPhim = this.phimList.stream()
                .filter(p -> p.getTen_phim().toUpperCase().contains(tenPhim.toUpperCase()))
                .findFirst()
                .get()
                .getMa_phim();
        int maPhongChieu = this.phongChieuList.stream()
                .filter(s -> s.getTen_phong_chieu().equalsIgnoreCase(tenPhongChieu))
                .findFirst()
                .get()
                .getMa_phong_chieu();
        SuatChieu suatChieu = new SuatChieu(maPhongChieu, maPhim, giaVe, thoiGian);
        int result = SuatChieuDAO.insert(cons, suatChieu);
        if (result < 0) {
            JOptionPane.showMessageDialog(this, "Thêm suất chiếu thất bại");
            return;
        }
        JOptionPane.showMessageDialog(this, "Thêm suất chiếu thành công");
        List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
        loadAllSuatChieu(suatChieuList);
    }//GEN-LAST:event_btnThemActionPerformed

    private void cbbPhongChieuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbPhongChieuItemStateChanged
        // TODO add your handling code here:
        if (isLoad) {
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String tenPhongChieu = (String) evt.getItem();
            int maPhongChieu = this.phongChieuList.stream()
                    .filter(p -> p.getTen_phong_chieu().toUpperCase().contains(tenPhongChieu.toUpperCase()))
                    .findFirst()
                    .get()
                    .getMa_phong_chieu();
            String tenPhim = (String) cbbPhim.getSelectedItem();
            int maPhim = this.phimList.stream()
                    .filter(p -> p.getTen_phim().toUpperCase().contains(tenPhim.toUpperCase()))
                    .findFirst()
                    .get()
                    .getMa_phim();
            List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
            loadAllSuatChieu(suatChieuList);
        }
    }//GEN-LAST:event_cbbPhongChieuItemStateChanged

    private void cbbPhimItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbPhimItemStateChanged
        // TODO add your handling code here:
        if (isLoad) {
            return;
        }
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String tenPhim = (String) evt.getItem();
            int maPhim = this.phimList.stream()
                    .filter(p -> p.getTen_phim().toUpperCase().contains(tenPhim.toUpperCase()))
                    .findFirst()
                    .get()
                    .getMa_phim();
            String tenPhongChieu = (String) cbbPhongChieu.getSelectedItem();
            int maPhongChieu = this.phongChieuList.stream()
                    .filter(p -> p.getTen_phong_chieu().toUpperCase().contains(tenPhongChieu.toUpperCase()))
                    .findFirst()
                    .get()
                    .getMa_phong_chieu();
            List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
            loadAllSuatChieu(suatChieuList);
        }
    }//GEN-LAST:event_cbbPhimItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.rowAtPoint(evt.getPoint());
        int col = 0;
        if (row >= 0) {
            this.maSuatChieu = (int) jTable1.getValueAt(row, col++);
            String tenPhongChieu = (String) jTable1.getValueAt(row, col++);
            String tenPhim = (String) jTable1.getValueAt(row, col++);
            Long giaVe = Long.parseLong(String.valueOf(jTable1.getValueAt(row, col++)));
            String thoiGian = (String) jTable1.getValueAt(row, col++);
            
            cbbPhongChieu.setSelectedItem(tenPhongChieu);
            cbbPhim.setSelectedItem(tenPhim);
            txtGiaVe.setText(String.valueOf(giaVe));
            dtThoiGianBatDau.datePicker.setDate(LocalDate.parse(thoiGian, DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss")));
            dtThoiGianBatDau.timePicker.setTime(LocalTime.parse(thoiGian, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        String tenPhim = (String) cbbPhim.getSelectedItem();
        String tenPhongChieu = (String) cbbPhongChieu.getSelectedItem();
        long giaVe = Long.parseLong(txtGiaVe.getText());
        String thoiGian = dtThoiGianBatDau.datePicker.getDateStringOrEmptyString() + 
                " " + dtThoiGianBatDau.timePicker.getTimeStringOrEmptyString() + ":00";
        int maPhim = this.phimList.stream()
                .filter(p -> p.getTen_phim().toUpperCase().contains(tenPhim.toUpperCase()))
                .findFirst()
                .get()
                .getMa_phim();
        int maPhongChieu = this.phongChieuList.stream()
                .filter(s -> s.getTen_phong_chieu().equalsIgnoreCase(tenPhongChieu))
                .findFirst()
                .get()
                .getMa_phong_chieu();
        SuatChieu suatChieu = new SuatChieu(this.maSuatChieu, maPhongChieu, maPhim, giaVe, thoiGian);
        int result = SuatChieuDAO.update(cons, suatChieu);
        if (result < 0) {
            JOptionPane.showMessageDialog(this, "Cập nhật suất chiếu thất bại");
            return;
        }
        JOptionPane.showMessageDialog(this, "Cập nhật suất chiếu thành công");
        List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
        loadAllSuatChieu(suatChieuList);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtGiaVe.setText("");
        dtThoiGianBatDau.datePicker.setDate(null);
        dtThoiGianBatDau.timePicker.setTime(null);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (this.maSuatChieu <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Chọn một suất chiểu để xóa");
            return;
        }
        int input = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn xóa suất chiếu này không?");
        if (input == 0) {
            int result = SuatChieuDAO.delete(cons, this.maSuatChieu);
            if (result < 0) {
                JOptionPane.showMessageDialog(this, "Xóa suất chiếu thất bại");
                return;
            }
            JOptionPane.showMessageDialog(this, "Xóa suất chiếu thành công");
            String tenPhim = (String) cbbPhim.getSelectedItem();
            String tenPhongChieu = (String) cbbPhongChieu.getSelectedItem();
            int maPhim = this.phimList.stream()
                    .filter(p -> p.getTen_phim().toUpperCase().contains(tenPhim.toUpperCase()))
                    .findFirst()
                    .get()
                    .getMa_phim();
            int maPhongChieu = this.phongChieuList.stream()
                    .filter(s -> s.getTen_phong_chieu().equalsIgnoreCase(tenPhongChieu))
                    .findFirst()
                    .get()
                    .getMa_phong_chieu();
            List<SuatChieu> suatChieuList = SuatChieuDAO.getByMaPhimAndMaPhongChieu(cons, maPhim, maPhongChieu);
            loadAllSuatChieu(suatChieuList);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        new TrangChu_NV().setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewSuatChieu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewSuatChieu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewSuatChieu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewSuatChieu_NV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewSuatChieu_NV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbPhim;
    private javax.swing.JComboBox<String> cbbPhongChieu;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker1;
    private com.github.lgooddatepicker.components.DateTimePicker dtThoiGianBatDau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtGiaVe;
    // End of variables declaration//GEN-END:variables

    boolean isLoad = false;
    public void loadAllPhim(List<Phim> phimList) {
        for (Phim phim : phimList) {
            isLoad = true;
            cbbPhim.addItem(phim.getTen_phim());
        }
        isLoad = false;
    }

    public void loadAllPhongChieu(List<PhongChieu> phongChieuList) {
        for (PhongChieu phongChieu : phongChieuList) {
            isLoad = true;
            cbbPhongChieu.addItem(phongChieu.getTen_phong_chieu());
        }
        isLoad = false;
    }

    public void loadAllSuatChieu(List<SuatChieu> suatChieuList) {
        DefaultTableModel modelTable = (DefaultTableModel) jTable1.getModel();
        modelTable.setRowCount(0);
        for (SuatChieu suatChieu : suatChieuList) {
            int maPhongChieu = suatChieu.getMa_phong_chieu();
            String tenPhongChieu = this.phongChieuList.stream()
                    .filter(s -> s.getMa_phong_chieu() == maPhongChieu)
                    .findFirst()
                    .get()
                    .getTen_phong_chieu();
            int maPhim = suatChieu.getMa_phim();
            String tenPhim = this.phimList.stream()
                    .filter(p -> p.getMa_phim() == maPhim)
                    .findFirst()
                    .get()
                    .getTen_phim();
            Object[] row = new Object[] {
                suatChieu.getMa_suat_chieu(), 
                tenPhongChieu,
                tenPhim,
                suatChieu.getGia_ve(),
                suatChieu.getThoi_gian()
            };
            modelTable.addRow(row);
        }
    }
}
